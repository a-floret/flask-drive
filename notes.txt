Build image
    podman build -t postgres-drive -f docker/postgres/Dockerfile .
    podman build -t flask-drive -f docker/flask/Dockerfile .
    podman build -t proxy-drive -f docker/nginx/Dockerfile .

Rebuild images
    podman build -t postgres-drive -f docker/postgres/Dockerfile --replace .
    podman build -t flask-drive -f docker/flask/Dockerfile --replace .
    podman build -t proxy-drive -f docker/nginx/Dockerfile --replace .
    
Run container
    podman run -d --name postgres --env-file flaskr/.env -p 5432:5432 -v drive-database:/var/lib/postgresql/data --network drive-n postgres-drive
    podman run -d --name drive --network drive-n flask-drive
    podman run -d --name proxy -p 8080:80 --network drive-n proxy-drive

Run compose
    podman-compose -f docker/podman-compose.yml up -d
    podman-compose -f docker/podman-compose.yml down

Force rebuild database
    podman-compose -f docker/podman-compose.yml down -v
    podman-compose -f docker/podman-compose.yml up -d

Use database
    psql -h localhost -p 5432 -U flaskuser -d flaskdb

Stop and prune
    podman stop proxy && podman rm proxy
    podman stop drive && podman rm drive
    podman stop postgres && podman rm postgres

Remove None images
    podman rmi $(podman images -q --filter "dangling=true")


--- k8s ---
Build images in minikube
    minikube image build -t postgres-drive:latest -f docker/postgres/Dockerfile .
    minikube image build -t flask-drive:latest -f docker/flask/Dockerfile .
    minikube image build -t proxy-drive:latest -f docker/nginx/Dockerfile .


Build namespace
    kubectl apply -f k8s/drive-namespace.yml 

Apply PVC
    kubectl apply -f k8s/postgres-pvc.yml -n flask-drive

Apply Secrets
    kubectl apply -f k8s/postgres-secrets.yml -n flask-drive

Apply deployment
    kubectl apply -f k8s/postgres-deployment.yml -n flask-drive
    kubectl apply -f k8s/flask-deployment.yml -n flask-drive
    kubectl apply -f k8s/proxy-deployment.yml -n flask-drive
    OU
    kubectl apply -f k8s/postgres-deployment.yml -f k8s/flask-deployment.yml -f k8s/proxy-deployment.yml -n flask-drive



Get Proxy url
    minikube service proxy -n flask-drive --url

Connect to database 
    kubectl exec -it -n flask-drive <nom-du-pod-postgres> -- bash
    psql -U $POSTGRES_USER -d $POSTGRES_DB
    OU
    kubectl port-forward -n flask-drive svc/postgres 5432:5432
    psql -h localhost -U <user> -d <db>


Clean namespace
    kubectl delete all --all -n flask-drive

Get pods status
    kubectl get pods -n flask-drive
    kubectl describe pod <nom-du-pod-postgres> -n flask-drive

Get cluster IP
    kubectl get svc -n flask-drive

Soft Restart
    kubectl rollout restart deployment flask -n flask-drive
    kubectl rollout restart deployment proxy -n flask-drive
    kubectl rollout restart deployment postgres -n flask-drive